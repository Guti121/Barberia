# Generated by Django 4.2.4 on 2024-01-09 01:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='estado')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creacion')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de Modificacion')),
                ('delete_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de eliminacion')),
                ('datos_json', models.JSONField()),
                ('foreinguser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User Pro')),
            ],
            options={
                'verbose_name': 'time table',
                'verbose_name_plural': 'times table',
            },
        ),
        migrations.CreateModel(
            name='ListAgenda',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='estado')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creacion')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de Modificacion')),
                ('delete_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de eliminacion')),
                ('day', models.DateField()),
                ('date_start', models.TimeField(verbose_name='Start shift')),
                ('date_finish', models.TimeField(verbose_name='Finish shift')),
                ('user_clie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_listagenda_set', to=settings.AUTH_USER_MODEL, verbose_name='Cliente')),
                ('user_pro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professional_listagenda_set', to=settings.AUTH_USER_MODEL, verbose_name='Profesional')),
            ],
            options={
                'verbose_name': 'Agenda',
                'verbose_name_plural': 'Agendas',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTimetable',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='estado')),
                ('created_date', models.DateTimeField(blank=True, editable=False, verbose_name='Fecha de Creacion')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, verbose_name='Fecha de Modificacion')),
                ('delete_date', models.DateTimeField(blank=True, editable=False, verbose_name='Fecha de eliminacion')),
                ('datos_json', models.JSONField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('foreinguser', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='User Pro')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical time table',
                'verbose_name_plural': 'historical times table',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalListAgenda',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='estado')),
                ('created_date', models.DateTimeField(blank=True, editable=False, verbose_name='Fecha de Creacion')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, verbose_name='Fecha de Modificacion')),
                ('delete_date', models.DateTimeField(blank=True, editable=False, verbose_name='Fecha de eliminacion')),
                ('day', models.DateField()),
                ('date_start', models.TimeField(verbose_name='Start shift')),
                ('date_finish', models.TimeField(verbose_name='Finish shift')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_clie', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Cliente')),
                ('user_pro', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Profesional')),
            ],
            options={
                'verbose_name': 'historical Agenda',
                'verbose_name_plural': 'historical Agendas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDateUser',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='estado')),
                ('created_date', models.DateTimeField(blank=True, editable=False, verbose_name='Fecha de Creacion')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, verbose_name='Fecha de Modificacion')),
                ('delete_date', models.DateTimeField(blank=True, editable=False, verbose_name='Fecha de eliminacion')),
                ('local', models.CharField(max_length=200, verbose_name='Namelocal')),
                ('startwork', models.TimeField()),
                ('finishwork', models.TimeField()),
                ('timeseccion', models.TimeField()),
                ('timebreak', models.TimeField()),
                ('breakstart', models.TimeField()),
                ('is_holidays', models.BooleanField(default=False)),
                ('startwork_holi', models.TimeField()),
                ('finishwork_holi', models.TimeField()),
                ('timebreak_holi', models.TimeField()),
                ('breakstart_holi', models.TimeField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('foreinguser', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='User Pro')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Date user',
                'verbose_name_plural': 'historical Dates users',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='DateUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='estado')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creacion')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de Modificacion')),
                ('delete_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de eliminacion')),
                ('local', models.CharField(max_length=200, verbose_name='Namelocal')),
                ('startwork', models.TimeField()),
                ('finishwork', models.TimeField()),
                ('timeseccion', models.TimeField()),
                ('timebreak', models.TimeField()),
                ('breakstart', models.TimeField()),
                ('is_holidays', models.BooleanField(default=False)),
                ('startwork_holi', models.TimeField()),
                ('finishwork_holi', models.TimeField()),
                ('timebreak_holi', models.TimeField()),
                ('breakstart_holi', models.TimeField()),
                ('foreinguser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User Pro')),
            ],
            options={
                'verbose_name': 'Date user',
                'verbose_name_plural': 'Dates users',
            },
        ),
    ]
